name: 'GADS Tests'
on: push
  #   branches:
  #     - master
  #     - dev
  #     - hotfix
  # pull_request:
  #   branches:
  #     - master
  #     - dev
  #     - hotfix
  #   paths-ignore:
  #     - '*.md'
  #     - VERSION

jobs:
  unit_tests:
    name: 'Unit Tests'
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 30
    container: debian:bookworm

    steps:
      - name: 'Check out the GADS repository'
        uses: 'actions/checkout@v4'
      - name: 'Install Non-CPAN dependencies'
        run: |
          chmod +x .github/workflows/install_dependencies.sh
          .github/workflows/install_dependencies.sh
      - name: 'Build cpanfile'
        run: perl bin/output_cpanfile > cpanfile
      - name: 'Install CPAN dependencies'
        uses: 'perl-actions/install-with-cpanm@v1'
        with:
          cpanfile: 'cpanfile'
      - name: 'Run the unit tests'
        run: |
          prove -lrs -j4 t

  webdriver_tests:
    name: 'Webdriver Tests for ${{ matrix.browser.name }}'
    runs-on: '${{ matrix.browser.os }}'
    timeout-minutes: 30
    container: debian:bookworm

    strategy:
      fail-fast: false
      matrix:
        browser:
          - name: 'Chromium'
            command: 'chromedriver --port=4444 &'
            os: 'ubuntu-22.04'
          - name: 'Firefox'
            command: 'MOZ_HEADLESS=1 geckodriver --log warn &'
            os: 'ubuntu-22.04'

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespassword
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    env:
      GADS_USERNAME: 'test@example.com'
      GADS_PASSWORD: 'xyz123'

    steps:
      - name: 'Check out the GADS code'
        uses: 'actions/checkout@v4'
      - name: 'Install Non-CPAN dependencies'
        run: |
          chmod +x .github/workflows/install_dependencies.sh
          .github/workflows/install_dependencies.sh
      - name: 'Build cpanfile'
        run: |
          perl bin/output_cpanfile > cpanfile
          ( cd webdriver && perl ../bin/output_cpanfile ) >> cpanfile
      - name: 'Install CPAN dependencies'
        uses: 'perl-actions/install-with-cpanm@v1'
        with:
          cpanfile: 'cpanfile'
      - name: 'Set up credentials for psql'
        # See https://wiki.postgresql.org/wiki/Pgpass
        run: |
          echo '*:*:*:postgres:postgrespassword' > ~/.pgpass
          chmod 600 ~/.pgpass
      - name: 'create uploads directory'
        run: |
          mkdir -p /tmp/uploads
          chmod 777 /tmp/uploads
      - name: 'Start the application'
        env:
          DANCER_CONFDIR: 'webdriver'
          PGDATABASE: 'postgres'
          PGHOST: 'postgres'
          PGUSER: 'postgres'
        run: |
          ./bin/setup_database
          perl bin/app.pl &
      - name: 'Run the Webdriver implementation'
        run: '${{ matrix.browser.command }}'
      - name: 'Run the Webdriver tests'
        run: prove -lmrsv webdriver/t
  
  cypress_tests:
    name: 'Cypress Tests for ${{ matrix.browser.name }}'
    runs-on: '${{ matrix.browser.os }}'
    timeout-minutes: 30
    container: debian:bookworm

    strategy:
      fail-fast: false
      matrix:
        browser:
          - name: 'chrome'
            os: 'ubuntu-22.04'
          
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespassword
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    env:
      GADS_USERNAME: 'test@example.com'
      GADS_PASSWORD: 'xyz123'

    steps:
      - name: 'Check out the GADS code'
        uses: 'actions/checkout@v4'
      - name: 'Install Non-CPAN dependencies'
        run: |
          chmod +x .github/workflows/install_dependencies.sh
          .github/workflows/install_dependencies.sh
      - name: 'Build cpanfile'
        run: |
          perl bin/output_cpanfile > cpanfile
      - name: 'Install CPAN dependencies'
        uses: 'perl-actions/install-with-cpanm@v1'
        with:
          cpanfile: 'cpanfile'
      - name: 'Set up credentials for psql'
        # See https://wiki.postgresql.org/wiki/Pgpass
        run: |
          echo '*:*:*:postgres:postgrespassword' > ~/.pgpass
          chmod 600 ~/.pgpass
      - name: 'Install YARN dependencies'
        run: |
          yarn
          yarn build --no-watch
      - name: 'create uploads directory'
        run: |
          mkdir -p /tmp/uploads
          chmod 777 /tmp/uploads
      - name: 'Start the application'
        env:
          DANCER_CONFDIR: 'webdriver'
          PGDATABASE: 'postgres'
          PGHOST: 'postgres'
          PGUSER: 'postgres'
          TEST: '1'
        run: |
          ./bin/setup_database
          perl bin/app.pl &
      - name: 'Run the Cypress tests'
        run: yarn cypress run --browser ${{ matrix.browser.name }}
              
  js_tests:
    name: 'JavaScript Tests for Node.js ${{ matrix.node-version }}'
    runs-on: ubuntu-latest
    container: debian:bookworm

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn
      - run: yarn jest --passWithNoTests
